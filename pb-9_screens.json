{"events":[],"handlers":[{"code":"screen_OFF = [[\nlocal layer = createLayer()\nlocal rx, ry = getResolution()\n\nlocal font = loadFont(\"Oxanium-Bold\", 40)\n\nsetDefaultFillColor(layer, Shape_Text, 0,0,1,1)\nsetDefaultStrokeColor(layer, Shape_Line, 0,.3,2,1)\nsetDefaultStrokeColor(layer, Shape_BoxRounded, 0,.3,2,1)\n\nsetNextFillColor(layer, 0,0,0,0)\nsetNextStrokeWidth(layer, 1)\naddBoxRounded(layer, 0, 0, rx, ry, 10)\n]]","filter":{"args":[],"signature":"onStop()","slotKey":"-5"},"key":"4"},{"code":"screens = {}\nfor slot_name, slot in pairs(unit) do\n    if type(slot) == \"table\"\n        and type(slot.export) == \"table\"\n        and slot.getClass\n    then\n        slot.slotname = slot_name\n        if slot.getClass():lower():find('screenunit') then \n            table.insert(screens,slot)\n            slot.activate()\n        elseif slot.getClass():lower():find('coreunit') then table.insert(core_unit,slot)\n        end\n    end\nend\n\nif #screens == 0 then system.print(\"No screen detected\")\nelse\n    table.sort(screens, function(a,b) return a.slotname < b.slotname end)\n    local plural = \"\"\n    if #screens > 1 then plural = \"s\" end\n    system.print(#screens .. \" screen\" .. plural .. \" connected.\")\nend\n\nif core == \"\" then\n    system.print(\"No core connected! Ending script.\") unit.exit() else system.print(\"Core connected\")\nend\n\n\n\nelementIdList = core.getElementIdList()\n\nmetalwork1 = {}\nmetalwork2 = {}\nmetalwork3 = {}\nmetalwork4 = {}\n\nelectronics1 = {}\nelectronics2 = {}\nelectronics3 = {}\nelectronics4 = {}\n\nglass1 = {}\nglass2 = {}\nglass3 = {}\nglass4 = {}\n\nprinter1 = {}\nprinter2 = {}\nprinter3 = {}\nprinter4 = {}\n\nchemical1 = {}\nchemical2 = {}\nchemical3 = {}\nchemical4 = {}\n\nrefiner1 = {}\nrefiner2 = {}\nrefiner3 = {}\nrefiner4 = {}\n\nsmelter1 = {}\nsmelter2 = {}\nsmelter3 = {}\nsmelter4 = {}\n\n-- Assembly Lines --\n\nassembly1 = {}\nassembly2 = {}\nassembly3 = {}\nassembly4 = {}\n\n---- substitution list, credits to Squizz Cephinator\nlocal ntxt = \"\"\nfunction getName(ntxt)    \n      \n        ntxt = ntxt:gsub(\" xs$\", \" XS\")\n        ntxt = ntxt:gsub(\" s$\", \" S\")\n        ntxt = ntxt:gsub(\" m$\", \" M\")\n        ntxt = ntxt:gsub(\" l$\", \" L\")\n        ntxt = ntxt:gsub(\" xl$\", \" XL\")        \n        ntxt = ntxt:gsub(\" Unit$\", \" U\")\n        ntxt = ntxt:gsub(\"^Basic \", \"B \")\n        ntxt = ntxt:gsub(\"^Uncommon \", \"U \")\n        ntxt = ntxt:gsub(\"^Advanced \", \"A \")\n        ntxt = ntxt:gsub(\"^Rare \", \"R \")\n        ntxt = ntxt:gsub(\"^Exotic \", \"X \")\n        ntxt = ntxt:gsub(\" industry \", \" I \")\n        ntxt = ntxt:gsub(\" Industry \", \" I \")\n        ntxt = ntxt:gsub(\" Reinforced \", \" Rfcd \")\n        ntxt = ntxt:gsub(\" plastic \", \" \")\n        ntxt = ntxt:gsub(\" product$\", \" \")\n        ntxt = ntxt:gsub(\" Product$\", \" \")\n        ntxt = ntxt:gsub(\" Container \", \" Ctnr \")    \n    \n    return ntxt\nend\n\nf_state = function(fid,F)\n    state = core.getElementIndustryInfoById(fid)[\"state\"]\n    if state == 1 and F == 0 then return \"Stopped\"\n        elseif state == 2 and F == 0 then \n        t = core.getElementIndustryInfoById(fid)[\"currentProducts\"]\n        tt = system.getItem(t[1][\"id\"])[\"displayNameWithSize\"]\n        tt = getName(tt)\n        return \"Running \" .. tt\n        elseif state == 3 and F == 0 then return \"Missing ingredient\"\n        elseif state == 4 and F == 0 then return \"Output full\"\n        elseif state == 5 and F == 0 then return \"No output container\"\n        elseif state == 6 and F == 0 then \n        t = core.getElementIndustryInfoById(fid)[\"currentProducts\"]\n        tt = system.getItem(t[1][\"id\"])[\"displayNameWithSize\"]\n        tt = getName(tt)\n        return \"Pending \" .. tt\n        elseif state == 7 and F == 0 then return \"Missing schematics\"\n    end\n    if state == 1 and F == 1 then return \"setNextFillColor(layer,1,1,0,1)\"\n        elseif state == 2 and F == 1 then return \"setNextFillColor(layer,0,1,0,1) \"\n        elseif state == 3 and F == 1 then return \"setNextFillColor(layer,1,0,0.8,1) \"\n        elseif state == 4 and F == 1 then return \"setNextFillColor(layer,1,0.5,0,1) \"\n        elseif state == 5 and F == 1 then return \"setNextFillColor(layer,1,0,0,1) \"\n        elseif state == 6 and F == 1 then return \"setNextFillColor(layer,0,0.5,1,1) \"\n        elseif state == 7 and F == 1 then return \"setNextFillColor(layer,1,0,0,1) \"\n        else return \"setNextFillColor(layer,1,0,0,1) \"\n    end\nend\n\n\nfor index,id in ipairs(elementIdList) do\n    elementType = core.getElementDisplayNameById(id):lower()\n    \n    if (elementType:find(\"metalwork industry\")) then\n            if (elementType:find(\"basic\")) then table.insert(metalwork1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(metalwork2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(metalwork3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(metalwork4,id)\n            end\n    end    \n    if (elementType:find(\"electronics industry\")) then\n            if (elementType:find(\"basic\")) then table.insert(electronics1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(electronics2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(electronics3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(electronics4,id)\n            end\n    end \n    if (elementType:find(\"glass furnace\")) then\n            if (elementType:find(\"basic\")) then table.insert(glass1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(glass2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(glass3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(glass4,id)\n            end\n    end \n    if (elementType:find(\"3d printer\")) then\n            if (elementType:find(\"basic\")) then table.insert(printer1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(printer2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(printer3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(printer4,id)\n            end\n    end\n    if (elementType:find(\"chemical industry\")) then\n            if (elementType:find(\"basic\")) then table.insert(chemical1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(chemical2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(chemical3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(chemical4,id)\n            end\n    end\n    if (elementType:find(\"refiner\")) then\n            if (elementType:find(\"basic\")) then table.insert(refiner1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(refiner2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(refiner3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(refiner4,id)\n            end\n    end\n    if (elementType:find(\"smelter\")) then\n            if (elementType:find(\"basic\")) then table.insert(smelter1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(smelter2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(smelter3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(smelter4,id)\n            end\n    end\n    if (elementType:find(\"assembly line\")) then\n            if (elementType:find(\"basic\")) then table.insert(assembly1,id)\n            elseif (elementType:find(\"uncommon\")) then table.insert(assembly2,id)\n            elseif (elementType:find(\"advanced\")) then table.insert(assembly3,id)\n            elseif (elementType:find(\"rare\")) then table.insert(assembly4,id)\n            end\n    end\n end\nfunction Round(num, dp)\n        local mult = 10^(dp or 0)\n    return math.floor(num * mult + 0.5)/mult\nend\n                  \n\n\nindy_count = function(tier)\n    local x = 0\n    if tier[x+1] == nil then x = 0\n    else for index,id in ipairs(tier) do x = x + 1 end\n    end\n    return x\nend\n\n","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"5"},{"code":"local T=text\n\nindy_type ={\"metalwork\",\"printer\",\"chemical\",\"glass\",\"refiner\",\"smelter\",\"assembler\", \"electronics\"}\n\n--local check=string.find(T,\"/help\")\n\n\nif string.find(T,\"help\") then\n system.print(\"--- Industry locator ---\")   \n system.print(\"Syntax:\")\n system.print(\"[machine_type] [tier] [number]\")\n system.print(\"ex: assembler t1 1\")\n system.print(\"possible machine types: metalwork, printer, chemical, glass, refiner, smelter, electronics, assembler\")\n system.print(\"to clear an arrow type: clear [index]\")\n system.print(\"ex: clear 18\")\n end\nif string.find(T,\"clear\") then\n    str = string.gsub(T, \"clear\" ,\"\")\n core.deleteSticker(tonumber(str))\n end\n\nif string.find(T, indy_type[1]) then\n   str = string.gsub(T, indy_type[1],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(metalwork1[iid])\n          --core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\")\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(metalwork2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(metalwork3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(metalwork4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n    \nelseif string.find(T, indy_type[2]) then\n   str = string.gsub(T, indy_type[2],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(printer1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(printer2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(printer3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(printer4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\nelseif string.find(T, indy_type[3]) then\n   str = string.gsub(T, indy_type[3],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(chemical1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(chemical2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(chemical3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(chemical4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\nelseif string.find(T, indy_type[4]) then\n   str = string.gsub(T, indy_type[4],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(glass1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(glass2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(glass3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(glass4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\n          end     \nelseif string.find(T, indy_type[5]) then\n   str = string.gsub(T, indy_type[5],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(refiner1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(refiner2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(refiner3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(refiner4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\nelseif string.find(T, indy_type[6]) then\n   str = string.gsub(T, indy_type[6],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(smelter1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(smelter2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(smelter3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(smelter4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\nelseif string.find(T, indy_type[7]) then\n   str = string.gsub(T, indy_type[7],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(assembly1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(assembly2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(assembly3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(assembly4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\nelseif string.find(T, indy_type[8]) then\n   str = string.gsub(T, indy_type[8],\"\")\n   \n       if string.find(str, \"t1\") then \n          str = string.gsub(str, \"t1\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(electronics1[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t2\") then \n          str = string.gsub(str, \"t2\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(electronics2[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t3\") then \n          str = string.gsub(str, \"t3\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(electronics3[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end\n        if string.find(str, \"t4\") then \n          str = string.gsub(str, \"t4\",\"\")\n          iid = tonumber(str)\n          c_pos = core.getElementPositionById(electronics4[iid])\n          system.print(\"Arrow added. Index : \" .. core.spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\n          end    \nend\n ","filter":{"args":[{"variable":"*"}],"signature":"onInputText(text)","slotKey":"-4"},"key":"3"},{"code":"screen_div = \"rx/5\"\nlocal t_posy = 0\n\nindy_column = function(indy, tier, posx, posy)\n    \n    stxt = \"\"\n    if tier == 1 then t_color = \"setDefaultFillColor(layer, Shape_Text, 0, 1, 0, 1)\\n\" end\n    if tier == 2 then t_color = \"setDefaultFillColor(layer, Shape_Text,0, 1, 1, 1)\\n\" end\n    if tier == 3 then t_color = \"setDefaultFillColor(layer, Shape_Text,1, .5, 0, 1)\\n\" end\n    if tier == 4 then t_color = \"setDefaultFillColor(layer, Shape_Text,1, 1, 0, 1)\\n\" end\n    \n    for index,id in ipairs(indy) do\n        if index < 10 then numb = \"0\" .. tostring(index) else numb = tostring(index) end\n        \n        if index < 56 then\n            stxt = stxt ..\"addText(layer, font3, \\\"\" .. numb..\"\\\", \".. posx .. \",\" .. posy ..\")\\n\" .. f_state(id,1) .. \"addText(layer, font3,\\\"\" .. f_state(id,0).. \"\\\" , \" .. posx + 20 .. \",\" .. posy .. \")\\n\"\n            posy = posy +10\n            else stxt = stxt .. \"addText(layer, font3, \\\"   + \" .. indy_count(indy) - 55 ..\" more\\\", \".. posx .. \",\" .. posy ..\")\\n\"\n            posy = posy +10\n            break\n            end\n   end\n   t_posy = posy\n   return t_color .. stxt\nend     \n\nscreen_ON = [[\nlocal layer = createLayer()\nlocal rx, ry = getResolution()\n\nlocal font = loadFont(\"Oxanium\", 12)\nlocal font2 = loadFont(\"Oxanium-Medium\", 20)\nlocal font3 = loadFont(\"RobotoCondensed\", 11)\nlocal font4 = loadFont(\"Oxanium\", 10)\nlocal font5 = loadFont(\"Oxanium-Medium\", 30)\n\nsetDefaultFillColor(layer, Shape_Text, 0,0,1,1)\nsetDefaultStrokeColor(layer, Shape_Line, 0,.3,2,1)\nsetDefaultStrokeColor(layer, Shape_BoxRounded, 0,.3,2,1)\n\nsetNextFillColor(layer, 0,0,0,0)\nsetNextStrokeWidth(layer, 1)\naddBoxRounded(layer, 0, 0, rx, ry, 10)\n\nlocal div = ]] .. screen_div .. [[\n\nlocal header = function(tag, y, p, n)\n    setNextFillColor(layer, 0,0,1,0.2)\n    setNextStrokeWidth(layer, .1)\n    addBoxRounded(layer, (p*div)+10, y, div - 20, 20, 4)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    setNextFillColor(layer, 1,1,1,1)\n    addText(layer, font3, \"(\" .. n .. \") \" .. tag, div/2+(p*div), y+10)\nend\n\nfor x = 1,5 do addLine (layer, div*x, 0, div*x, ry) end\n\n\nsetNextFillColor(layer, 0, 1, 0, 1)\naddText(layer, font, \"Tier 1 - Basic\", rx-190,ry-70)\nsetNextFillColor(layer, 0, 1, 1, 1)\naddText(layer, font, \"Tier 2 - Uncommon\", rx-190,ry-55)\nsetNextFillColor(layer, 1, .5, 0, 1)\naddText(layer, font, \"Tier 3 - Advanced\", rx-190,ry-40)\nsetNextFillColor(layer, 1, 1, 0, 1)\naddText(layer, font, \"Tier 4 - Rare\", rx-190,ry-25)\naddText(layer, font, \"Refresh rate: ]] .. timer .. [[ seconds\", rx-190,ry-10)\n\nheader(\"Metalwork Industry\", 10, 0, ]] .. metalwork_c ..[[)\n\n]] .. indy_column(metalwork1, 1, 10, 50) .. indy_column(metalwork2, 2, 10, t_posy) .. indy_column(metalwork3, 3, 10, t_posy) .. indy_column(metalwork4, 4, 10, t_posy) .. [[\n\nheader(\"Electronics Industry\", 10, 1, ]] .. electronics_c ..[[)\n]] .. indy_column(electronics1, 1, 215, 50) .. indy_column(electronics2, 2, 215, t_posy) .. indy_column(electronics3, 3, 215, t_posy) .. indy_column(electronics4, 4, 215, t_posy) ..[[\n\nheader(\"Chemical Industry\", ]]..t_posy + 10 .. [[, 1, ]] .. chemical_c ..[[)\n]] .. indy_column(chemical1, 1, 215, t_posy + 50) .. indy_column(chemical2, 2, 215, t_posy) .. indy_column(chemical3, 3, 215, t_posy) .. indy_column(chemical4, 4, 215, t_posy) ..[[\n\nheader(\"Glass Industry\", 10, 2, ]] .. glass_c ..[[)\n]].. indy_column(glass1, 1, 420, 50) .. indy_column(glass2, 2, 420, t_posy) .. indy_column(glass3, 3, 420, t_posy) .. indy_column(glass4, 4, 420, t_posy) .. [[\n\nheader(\"Refiners\", ]] .. t_posy +10 ..[[, 2, ]] .. refiner_c ..[[)\n]].. indy_column(refiner1, 1, 420, t_posy + 50) .. indy_column(refiner2, 2, 420, t_posy) .. indy_column(refiner3, 3, 420, t_posy) .. indy_column(refiner4, 4, 420, t_posy) ..[[\n\nheader(\"3D Printers\", 10, 3, ]] .. printer_c ..[[)\n]].. indy_column(printer1, 1, 625, 50) .. indy_column(printer2, 2, 625, t_posy) .. indy_column(printer3, 3, 625, t_posy) .. indy_column(printer4, 4, 625, t_posy) ..[[\n\nheader(\"Smelters\", ]] .. t_posy +10 ..[[, 3, ]] .. smelter_c ..[[)\n]].. indy_column(smelter1, 1, 625, t_posy+50) .. indy_column(smelter2, 2, 625, t_posy) .. indy_column(smelter3, 3, 625, t_posy) .. indy_column(smelter4, 4, 625, t_posy) ..[[\n\nheader(\"Assembly Lines\", 10, 4, ]] .. assembly_c ..[[)\n]]..indy_column(assembly1, 1, 830, 50) .. indy_column(assembly2, 2, 830, t_posy) .. indy_column(assembly3, 3, 830, t_posy) .. indy_column(assembly4, 4, 830, t_posy) ..[[\n\n]]\n\nscreens[1].setRenderScript(screen_ON)","filter":{"args":[{"value":"s1"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"0"},{"code":"screens[1].setRenderScript(screen_OFF)","filter":{"args":[],"signature":"onStop()","slotKey":"-1"},"key":"1"},{"code":"\ntimer = 2 --export: Refresh timer\nsystem.print(\" --- Factory Monitor v1.1 ---\")\nsystem.print(\"Welcome engineer \" .. player.getName())\nsystem.print(\"type: 'help' for available commands\")\nsystem.print(\"system starting in \" .. timer .. \" seconds\")\n\nmetalwork_c = indy_count(metalwork1) + indy_count(metalwork2) + indy_count(metalwork3) + indy_count(metalwork4)\nelectronics_c = indy_count(electronics1) + indy_count(electronics2) + indy_count(electronics3) + indy_count(electronics4)\nglass_c = indy_count(glass1) + indy_count(glass2) + indy_count(glass3) + indy_count(glass4) \nprinter_c = indy_count(printer1) + indy_count(printer2) + indy_count(printer3) + indy_count(printer4)\nchemical_c = indy_count(chemical1) + indy_count(chemical2) + indy_count(chemical3) + indy_count(chemical4)\nrefiner_c = indy_count(refiner1) + indy_count(refiner2) + indy_count(refiner3) + indy_count(refiner4) \nsmelter_c = indy_count(smelter1) + indy_count(smelter2) + indy_count(smelter3) + indy_count(smelter4) \nassembly_c = indy_count(assembly1) + indy_count(assembly2) + indy_count(assembly3) + indy_count(assembly4)\n\n\nunit.setTimer(\"s1\",timer)","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"2"}],"methods":[],"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}}}
